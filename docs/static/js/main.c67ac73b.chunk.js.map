{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMA4CeA,EAzCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAqBvC,OACI,sBAAMC,SAdW,SAAEC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAQlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAvBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,QAuBhBG,YAAY,kB,+BC/BfC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAQ,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAYZM,GAZY,4CAAH,sDCGPO,G,MAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OAFAc,QAAQC,IAAKN,EAAIC,EAAOV,GAGpB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAKA,SCNJS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdf,mBAAS,CAC/BsB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAlBAC,qBAAY,WAER1B,EAASC,GACJ0B,MAAM,SAAAC,GACHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAItB,CAACtB,IAQGuB,EDtB0BK,CAAc5B,GAAlCa,EAFwB,EAE7BN,KAAae,EAFgB,EAEhBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,6CAAd,SAA6DlB,IAE3DsB,GAAW,mBAAGJ,UAAU,oCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADAA,EAAIC,aEUtBkB,EAxBO,WAAO,IAAD,EAEY5C,mBAAU,CAAC,cAFvB,mBAEjBQ,EAFiB,KAELT,EAFK,KAKxB,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BACMS,EAAWgB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCZ9B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c67ac73b.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputchange = ( e ) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length > 2){\r\n            \r\n            setCategories( categories => [ inputValue, ...categories ]);\r\n            setInputValue('')\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit }>\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputchange }\r\n                placeholder=\"Write here\"\r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&api_key=8T6p8pml7PSCO32TQTKuc46tjxqmrrxE&limit=10`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map( img => {\r\n        return ({\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        })\r\n    })\r\n    return gifs;\r\n\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport 'animate.css'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    console.log( id, title, url );\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"category animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__shakeX\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            { ...img }\r\n                        />\r\n\r\n                    )) \r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(  () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n    // // useEffect( () => {\r\n    // //     getGifs( category )\r\n    // //         .then( imgs => setImages(  imgs ))\r\n    // // }, [category])\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState( ['Star Wars'] );\r\n\r\n\r\n    return(\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n\r\n            <ol>\r\n                { categories.map( category => ( \r\n                    <GifGrid \r\n                        key={ category }\r\n                        category={ category }\r\n                    />\r\n                )) \r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GiftExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GifExpertApp'\nimport './index.css'\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}